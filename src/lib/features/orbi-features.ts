/**
 * ============================================================================
 * DEFINI√á√ÉO DE FEATURES DO ORBI
 * ============================================================================
 * 
 * ‚ö†Ô∏è IMPORTANTE: Estas features correspondem EXATAMENTE √†s p√°ginas do menu lateral!
 * Apenas funcionalidades REAIS que existem no sistema devem estar aqui.
 */

import { featureRegistry, defineFeature, defineLimit } from './feature-registry';

// ============================================================================
// üéØ FEATURES CORE (Sempre Inclu√≠das)
// ============================================================================

featureRegistry.registerFeatures([
  defineFeature(
    'dashboard',
    'Dashboard',
    'Acesso ao dashboard principal do sistema',
    'core',
    { isCore: true, route: '/sistema', metadata: { module: 'dashboard', icon: 'üìä', moduleLabel: 'Dashboard' } }
  ),
]);

// ============================================================================
// üí∞ P√ÅGINAS DO MENU LATERAL (Features Principais)
// ============================================================================

featureRegistry.registerFeatures([
  // EXTRATO
  defineFeature(
    'extrato',
    'Acessar Extrato',
    'Visualizar a p√°gina de extrato mensal com todas as transa√ß√µes',
    'financial',
    { route: '/sistema/statement', metadata: { module: 'extrato', icon: 'üìù', moduleLabel: 'Extrato' } }
  ),

  // CONTAS
  defineFeature(
    'contas',
    'Acessar Contas',
    'Visualizar a p√°gina de gerenciamento de contas banc√°rias',
    'financial',
    { route: '/sistema/accounts', metadata: { module: 'contas', icon: 'üè¶', moduleLabel: 'Contas' } }
  ),

  // CATEGORIAS
  defineFeature(
    'categorias',
    'Acessar Categorias',
    'Visualizar a p√°gina de gerenciamento de categorias',
    'financial',
    { route: '/sistema/categories', metadata: { module: 'categorias', icon: 'üìÇ', moduleLabel: 'Categorias' } }
  ),

  // CART√ïES
  defineFeature(
    'cartoes',
    'Acessar Cart√µes',
    'Visualizar a p√°gina de gerenciamento de cart√µes de cr√©dito',
    'financial',
    { route: '/sistema/cards', metadata: { module: 'cartoes', icon: 'üí≥', moduleLabel: 'Cart√µes' } }
  ),

  // PESSOAS
  defineFeature(
    'pessoas',
    'Acessar Pessoas',
    'Visualizar a p√°gina de gerenciamento de pessoas e contatos',
    'financial',
    { route: '/sistema/people', metadata: { module: 'pessoas', icon: 'üë•', moduleLabel: 'Pessoas' } }
  ),

  // IA CLASSIFICADOR
  defineFeature(
    'ia_classificador',
    'Acessar IA Classificador',
    'Visualizar a p√°gina do IA Classificador para treinar o modelo de ML',
    'automation',
    { route: '/sistema/my-ai', metadata: { module: 'ia', icon: 'ü§ñ', moduleLabel: 'IA Classificador' } }
  ),
]);

// ============================================================================
// üîß OPERA√á√ïES E FUNCIONALIDADES
// ============================================================================

featureRegistry.registerFeatures([
  // Opera√ß√µes em Transa√ß√µes (Extrato)
  defineFeature(
    'transacoes_criar',
    'Criar Transa√ß√µes',
    'Adicionar novas transa√ß√µes manualmente (bot√£o Nova Transa√ß√£o)',
    'financial',
    { dependencies: ['extrato'], metadata: { module: 'extrato' } }
  ),
  defineFeature(
    'transacoes_editar',
    'Editar Transa√ß√µes',
    'Editar transa√ß√µes existentes',
    'financial',
    { dependencies: ['extrato'], metadata: { module: 'extrato' } }
  ),
  defineFeature(
    'transacoes_excluir',
    'Excluir Transa√ß√µes',
    'Remover transa√ß√µes',
    'financial',
    { dependencies: ['extrato'], metadata: { module: 'extrato' } }
  ),
  defineFeature(
    'transacoes_importar_csv',
    'Importar CSV',
    'Importar transa√ß√µes via arquivo CSV',
    'financial',
    { dependencies: ['extrato'], metadata: { module: 'extrato' } }
  ),

  // Opera√ß√µes em Contas
  defineFeature(
    'contas_criar',
    'Criar Contas',
    'Adicionar novas contas banc√°rias',
    'financial',
    { dependencies: ['contas'], metadata: { module: 'contas' } }
  ),
  defineFeature(
    'contas_editar',
    'Editar Contas',
    'Editar informa√ß√µes de contas',
    'financial',
    { dependencies: ['contas'], metadata: { module: 'contas' } }
  ),
  defineFeature(
    'contas_excluir',
    'Excluir Contas',
    'Remover contas banc√°rias',
    'financial',
    { dependencies: ['contas'], metadata: { module: 'contas' } }
  ),

  // Opera√ß√µes em Categorias
  defineFeature(
    'categorias_criar',
    'Criar Categorias',
    'Criar novas categorias',
    'financial',
    { dependencies: ['categorias'], metadata: { module: 'categorias' } }
  ),
  defineFeature(
    'categorias_editar',
    'Editar Categorias',
    'Editar categorias existentes',
    'financial',
    { dependencies: ['categorias'], metadata: { module: 'categorias' } }
  ),
  defineFeature(
    'categorias_excluir',
    'Excluir Categorias',
    'Remover categorias',
    'financial',
    { dependencies: ['categorias'], metadata: { module: 'categorias' } }
  ),

  // Opera√ß√µes em Cart√µes
  defineFeature(
    'cartoes_criar',
    'Criar Cart√µes',
    'Adicionar novos cart√µes de cr√©dito',
    'financial',
    { dependencies: ['cartoes'], metadata: { module: 'cartoes' } }
  ),
  defineFeature(
    'cartoes_editar',
    'Editar Cart√µes',
    'Editar informa√ß√µes dos cart√µes',
    'financial',
    { dependencies: ['cartoes'], metadata: { module: 'cartoes' } }
  ),
  defineFeature(
    'cartoes_excluir',
    'Excluir Cart√µes',
    'Remover cart√µes de cr√©dito',
    'financial',
    { dependencies: ['cartoes'], metadata: { module: 'cartoes' } }
  ),
  defineFeature(
    'cartoes_faturas',
    'Gerenciar Faturas',
    'Visualizar e gerenciar faturas dos cart√µes',
    'financial',
    { dependencies: ['cartoes'], metadata: { module: 'cartoes' } }
  ),

  // Opera√ß√µes em Pessoas
  defineFeature(
    'pessoas_criar',
    'Criar Pessoas',
    'Adicionar novas pessoas/contatos',
    'financial',
    { dependencies: ['pessoas'], metadata: { module: 'pessoas' } }
  ),
  defineFeature(
    'pessoas_editar',
    'Editar Pessoas',
    'Editar informa√ß√µes de pessoas',
    'financial',
    { dependencies: ['pessoas'], metadata: { module: 'pessoas' } }
  ),
  defineFeature(
    'pessoas_excluir',
    'Excluir Pessoas',
    'Remover pessoas do sistema',
    'financial',
    { dependencies: ['pessoas'], metadata: { module: 'pessoas' } }
  ),

  // Funcionalidades de IA
  defineFeature(
    'ia_classificacao_automatica',
    'Classifica√ß√£o Autom√°tica',
    'Usar IA para classificar transa√ß√µes automaticamente',
    'automation',
    { dependencies: ['ia_classificador'], metadata: { module: 'ia' } }
  ),
  defineFeature(
    'ia_deteccao_logos',
    'Detec√ß√£o de Logos',
    'Reconhecer e buscar logos de estabelecimentos automaticamente',
    'automation',
    { dependencies: ['ia_classificador'], metadata: { module: 'ia' } }
  ),
]);






// ============================================================================
// üìä LIMITES DO SISTEMA
// ============================================================================

featureRegistry.registerLimits([
  defineLimit(
    'max_contas',
    'M√°ximo de Contas',
    'N√∫mero m√°ximo de contas banc√°rias que pode cadastrar',
    'financial',
    3,
    { minValue: 1, maxValue: -1, unit: 'contas' }
  ),
  defineLimit(
    'max_cartoes',
    'M√°ximo de Cart√µes',
    'N√∫mero m√°ximo de cart√µes de cr√©dito',
    'financial',
    2,
    { minValue: 0, maxValue: -1, unit: 'cart√µes' }
  ),
  defineLimit(
    'max_transacoes_mes',
    'Transa√ß√µes por M√™s',
    'N√∫mero m√°ximo de transa√ß√µes que pode criar por m√™s',
    'financial',
    500,
    { minValue: 50, maxValue: -1, unit: 'transa√ß√µes/m√™s' }
  ),
  defineLimit(
    'max_pessoas',
    'M√°ximo de Pessoas',
    'N√∫mero m√°ximo de pessoas/contatos',
    'financial',
    10,
    { minValue: 5, maxValue: -1, unit: 'pessoas' }
  ),
  defineLimit(
    'max_categorias',
    'M√°ximo de Categorias',
    'N√∫mero m√°ximo de categorias personalizadas',
    'financial',
    20,
    { minValue: 10, maxValue: -1, unit: 'categorias' }
  ),
  defineLimit(
    'retencao_dados_meses',
    'Reten√ß√£o de Dados',
    'Por quantos meses os dados hist√≥ricos s√£o mantidos',
    'core',
    12,
    { minValue: 6, maxValue: -1, unit: 'meses' }
  ),
]);

// Exportar para f√°cil acesso
export { featureRegistry };

