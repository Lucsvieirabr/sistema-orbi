#!/bin/bash

# Script de setup autom√°tico para integra√ß√£o logo.dev
# Autor: Sistema Orbi
# Data: Outubro 2025

set -e

echo "üé® Setup da Integra√ß√£o Logo.dev"
echo "================================"
echo ""

# Cores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Verificar se est√° na raiz do projeto
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå Execute este script da raiz do projeto${NC}"
    exit 1
fi

# 1. Verificar se Supabase CLI est√° instalado
echo "üì¶ Verificando Supabase CLI..."
if ! command -v supabase &> /dev/null; then
    echo -e "${RED}‚ùå Supabase CLI n√£o encontrado${NC}"
    echo "Instale com: npm install -g supabase"
    exit 1
fi
echo -e "${GREEN}‚úÖ Supabase CLI encontrado${NC}"
echo ""

# 2. Verificar/Criar arquivo .env para Edge Functions
echo "üîë Configurando vari√°veis de ambiente..."
ENV_FILE="supabase/functions/.env"

if [ ! -f "$ENV_FILE" ]; then
    echo "LOGO_DEV_TOKEN=" > "$ENV_FILE"
    echo -e "${YELLOW}‚ö†Ô∏è  Arquivo .env criado em supabase/functions/.env${NC}"
    echo -e "${YELLOW}   Por favor, adicione seu token da logo.dev${NC}"
    echo ""
else
    echo -e "${GREEN}‚úÖ Arquivo .env j√° existe${NC}"
fi

# Verificar se token est√° configurado
if grep -q "LOGO_DEV_TOKEN=\$" "$ENV_FILE" || grep -q "LOGO_DEV_TOKEN=$" "$ENV_FILE"; then
    echo -e "${YELLOW}‚ö†Ô∏è  Token n√£o configurado ainda${NC}"
    echo "   Edite: $ENV_FILE"
    echo "   Obtenha seu token em: https://logo.dev"
    echo ""
else
    echo -e "${GREEN}‚úÖ Token configurado${NC}"
    echo ""
fi

# 3. Aplicar migra√ß√µes
echo "üóÑÔ∏è  Aplicando migra√ß√µes do banco..."
if supabase db push --dry-run 2>&1 | grep -q "20251009000002_add_logo_url_to_series"; then
    echo -e "${YELLOW}‚ö†Ô∏è  Migra√ß√£o ainda n√£o aplicada${NC}"
    read -p "Deseja aplicar agora? (y/n) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        supabase db push
        echo -e "${GREEN}‚úÖ Migra√ß√£o aplicada${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Migra√ß√£o pulada - execute manualmente: supabase db push${NC}"
    fi
else
    echo -e "${GREEN}‚úÖ Migra√ß√µes atualizadas${NC}"
fi
echo ""

# 4. Verificar se Supabase est√° rodando
echo "üöÄ Verificando Supabase local..."
if ! supabase status &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Supabase n√£o est√° rodando${NC}"
    read -p "Deseja iniciar agora? (y/n) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        supabase start
        echo -e "${GREEN}‚úÖ Supabase iniciado${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Execute manualmente: supabase start${NC}"
    fi
else
    echo -e "${GREEN}‚úÖ Supabase rodando${NC}"
fi
echo ""

# 5. Instru√ß√µes para testar
echo "üéØ Pr√≥ximos Passos:"
echo "==================="
echo ""
echo "1. Configurar token (se ainda n√£o fez):"
echo -e "   ${YELLOW}nano $ENV_FILE${NC}"
echo ""
echo "2. Servir a Edge Function localmente:"
echo -e "   ${YELLOW}cd supabase/functions${NC}"
echo -e "   ${YELLOW}supabase functions serve search-logo --env-file .env${NC}"
echo ""
echo "3. Testar a fun√ß√£o:"
echo -e '   ${YELLOW}curl -X POST http://localhost:54321/functions/v1/search-logo \\${NC}'
echo -e '     ${YELLOW}-H "Content-Type: application/json" \\${NC}'
echo -e '     ${YELLOW}-d '"'"'{"query":"Netflix"}'"'"'${NC}'
echo ""
echo "4. Iniciar o app:"
echo -e "   ${YELLOW}npm run dev${NC}"
echo ""
echo "5. Criar uma assinatura no app e ver o logo no dashboard!"
echo ""

# 6. Deploy em produ√ß√£o (opcional)
echo "üì¶ Para deploy em produ√ß√£o:"
echo "============================"
echo ""
echo "1. Deploy da Edge Function:"
echo -e "   ${YELLOW}supabase functions deploy search-logo${NC}"
echo ""
echo "2. Configurar secret em produ√ß√£o:"
echo -e "   ${YELLOW}supabase secrets set LOGO_DEV_TOKEN=seu_token${NC}"
echo ""
echo "3. Aplicar migra√ß√µes:"
echo -e "   ${YELLOW}supabase db push${NC}"
echo ""

echo -e "${GREEN}‚ú® Setup conclu√≠do!${NC}"
echo ""
echo "üìö Documenta√ß√£o completa: LOGO_INTEGRATION_README.md"
echo "‚ö° Setup r√°pido: QUICK_SETUP.md"

